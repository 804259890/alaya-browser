<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platon.browser.dao.mapper.Erc20TokenDetailMapper">
  <resultMap id="BaseResultMap" type="com.platon.browser.dao.entity.Erc20TokenDetail">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="contract" jdbcType="VARCHAR" property="contract" />
    <result column="tx_count" jdbcType="INTEGER" property="txCount" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.platon.browser.dao.entity.Erc20TokenDetailWithBLOBs">
    <result column="abi" jdbcType="LONGVARCHAR" property="abi" />
    <result column="bin_code" jdbcType="LONGVARCHAR" property="binCode" />
    <result column="source_code" jdbcType="LONGVARCHAR" property="sourceCode" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, contract, tx_count, create_time
  </sql>
  <sql id="Blob_Column_List">
    abi, bin_code, source_code
  </sql>
  <select id="selectByExampleWithBLOBs" parameterType="com.platon.browser.dao.entity.Erc20TokenDetailExample" resultMap="ResultMapWithBLOBs">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from erc20_token_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" parameterType="com.platon.browser.dao.entity.Erc20TokenDetailExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from erc20_token_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from erc20_token_detail
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from erc20_token_detail
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.platon.browser.dao.entity.Erc20TokenDetailExample">
    delete from erc20_token_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.platon.browser.dao.entity.Erc20TokenDetailWithBLOBs" useGeneratedKeys="true" keyProperty="id">
    insert into erc20_token_detail (contract, tx_count,
      create_time, abi, bin_code, 
      source_code)
    values (#{contract,jdbcType=VARCHAR}, #{txCount,jdbcType=INTEGER},
      #{createTime,jdbcType=TIMESTAMP}, #{abi,jdbcType=LONGVARCHAR}, #{binCode,jdbcType=LONGVARCHAR}, 
      #{sourceCode,jdbcType=LONGVARCHAR})
  </insert>

  <select id="countByExample" parameterType="com.platon.browser.dao.entity.Erc20TokenDetailExample" resultType="java.lang.Long">
    select count(*) from erc20_token_detail
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update erc20_token_detail
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.contract != null">
        contract = #{record.contract,jdbcType=VARCHAR},
      </if>
      <if test="record.txCount != null">
        tx_count = #{record.txCount,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.abi != null">
        abi = #{record.abi,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.binCode != null">
        bin_code = #{record.binCode,jdbcType=LONGVARCHAR},
      </if>
      <if test="record.sourceCode != null">
        source_code = #{record.sourceCode,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map">
    update erc20_token_detail
    set id = #{record.id,jdbcType=BIGINT},
      contract = #{record.contract,jdbcType=VARCHAR},
      tx_count = #{record.txCount,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      abi = #{record.abi,jdbcType=LONGVARCHAR},
      bin_code = #{record.binCode,jdbcType=LONGVARCHAR},
      source_code = #{record.sourceCode,jdbcType=LONGVARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update erc20_token_detail
    set id = #{record.id,jdbcType=BIGINT},
      contract = #{record.contract,jdbcType=VARCHAR},
      tx_count = #{record.txCount,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.platon.browser.dao.entity.Erc20TokenDetailWithBLOBs">
    update erc20_token_detail
    <set>
      <if test="contract != null">
        contract = #{contract,jdbcType=VARCHAR},
      </if>
      <if test="txCount != null">
        tx_count = #{txCount,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="abi != null">
        abi = #{abi,jdbcType=LONGVARCHAR},
      </if>
      <if test="binCode != null">
        bin_code = #{binCode,jdbcType=LONGVARCHAR},
      </if>
      <if test="sourceCode != null">
        source_code = #{sourceCode,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.platon.browser.dao.entity.Erc20TokenDetailWithBLOBs">
    update erc20_token_detail
    set contract = #{contract,jdbcType=VARCHAR},
      tx_count = #{txCount,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      abi = #{abi,jdbcType=LONGVARCHAR},
      bin_code = #{binCode,jdbcType=LONGVARCHAR},
      source_code = #{sourceCode,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.platon.browser.dao.entity.Erc20TokenDetail">
    update erc20_token_detail
    set contract = #{contract,jdbcType=VARCHAR},
      tx_count = #{txCount,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert" parameterType="map" useGeneratedKeys="true" keyProperty="id">
    insert into erc20_token_detail
    (contract, tx_count, create_time, abi, bin_code, source_code)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.contract,jdbcType=VARCHAR}, #{item.txCount,jdbcType=INTEGER},
        #{item.createTime,jdbcType=TIMESTAMP}, #{item.abi,jdbcType=LONGVARCHAR}, #{item.binCode,jdbcType=LONGVARCHAR}, 
        #{item.sourceCode,jdbcType=LONGVARCHAR})
    </foreach>
  </insert>

</mapper>