<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platon.browser.dao.mapper.UnDelegationMapper">
  <resultMap id="BaseResultMap" type="com.platon.browser.dao.entity.UnDelegation">
    <id column="hash" jdbcType="VARCHAR" property="hash" />
    <result column="delegate_addr" jdbcType="VARCHAR" property="delegateAddr" />
    <result column="staking_block_num" jdbcType="BIGINT" property="stakingBlockNum" />
    <result column="node_id" jdbcType="VARCHAR" property="nodeId" />
    <result column="apply_amount" jdbcType="VARCHAR" property="applyAmount" />
    <result column="redeem_locked" jdbcType="VARCHAR" property="redeemLocked" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    hash, delegate_addr, staking_block_num, node_id, apply_amount, redeem_locked, `status`, 
    create_time, update_time
  </sql>
  <select id="selectByExample" parameterType="com.platon.browser.dao.entity.UnDelegationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from un_delegation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from un_delegation
    where hash = #{hash,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from un_delegation
    where hash = #{hash,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.platon.browser.dao.entity.UnDelegationExample">
    delete from un_delegation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.platon.browser.dao.entity.UnDelegation">
    insert into un_delegation (hash, delegate_addr, staking_block_num, 
      node_id, apply_amount, redeem_locked, 
      `status`, create_time, update_time
      )
    values (#{hash,jdbcType=VARCHAR}, #{delegateAddr,jdbcType=VARCHAR}, #{stakingBlockNum,jdbcType=BIGINT}, 
      #{nodeId,jdbcType=VARCHAR}, #{applyAmount,jdbcType=VARCHAR}, #{redeemLocked,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.platon.browser.dao.entity.UnDelegation">
    insert into un_delegation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="hash != null">
        hash,
      </if>
      <if test="delegateAddr != null">
        delegate_addr,
      </if>
      <if test="stakingBlockNum != null">
        staking_block_num,
      </if>
      <if test="nodeId != null">
        node_id,
      </if>
      <if test="applyAmount != null">
        apply_amount,
      </if>
      <if test="redeemLocked != null">
        redeem_locked,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="hash != null">
        #{hash,jdbcType=VARCHAR},
      </if>
      <if test="delegateAddr != null">
        #{delegateAddr,jdbcType=VARCHAR},
      </if>
      <if test="stakingBlockNum != null">
        #{stakingBlockNum,jdbcType=BIGINT},
      </if>
      <if test="nodeId != null">
        #{nodeId,jdbcType=VARCHAR},
      </if>
      <if test="applyAmount != null">
        #{applyAmount,jdbcType=VARCHAR},
      </if>
      <if test="redeemLocked != null">
        #{redeemLocked,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.platon.browser.dao.entity.UnDelegationExample" resultType="java.lang.Long">
    select count(*) from un_delegation
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update un_delegation
    <set>
      <if test="record.hash != null">
        hash = #{record.hash,jdbcType=VARCHAR},
      </if>
      <if test="record.delegateAddr != null">
        delegate_addr = #{record.delegateAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.stakingBlockNum != null">
        staking_block_num = #{record.stakingBlockNum,jdbcType=BIGINT},
      </if>
      <if test="record.nodeId != null">
        node_id = #{record.nodeId,jdbcType=VARCHAR},
      </if>
      <if test="record.applyAmount != null">
        apply_amount = #{record.applyAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.redeemLocked != null">
        redeem_locked = #{record.redeemLocked,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update un_delegation
    set hash = #{record.hash,jdbcType=VARCHAR},
      delegate_addr = #{record.delegateAddr,jdbcType=VARCHAR},
      staking_block_num = #{record.stakingBlockNum,jdbcType=BIGINT},
      node_id = #{record.nodeId,jdbcType=VARCHAR},
      apply_amount = #{record.applyAmount,jdbcType=VARCHAR},
      redeem_locked = #{record.redeemLocked,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.platon.browser.dao.entity.UnDelegation">
    update un_delegation
    <set>
      <if test="delegateAddr != null">
        delegate_addr = #{delegateAddr,jdbcType=VARCHAR},
      </if>
      <if test="stakingBlockNum != null">
        staking_block_num = #{stakingBlockNum,jdbcType=BIGINT},
      </if>
      <if test="nodeId != null">
        node_id = #{nodeId,jdbcType=VARCHAR},
      </if>
      <if test="applyAmount != null">
        apply_amount = #{applyAmount,jdbcType=VARCHAR},
      </if>
      <if test="redeemLocked != null">
        redeem_locked = #{redeemLocked,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where hash = #{hash,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.platon.browser.dao.entity.UnDelegation">
    update un_delegation
    set delegate_addr = #{delegateAddr,jdbcType=VARCHAR},
      staking_block_num = #{stakingBlockNum,jdbcType=BIGINT},
      node_id = #{nodeId,jdbcType=VARCHAR},
      apply_amount = #{applyAmount,jdbcType=VARCHAR},
      redeem_locked = #{redeemLocked,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where hash = #{hash,jdbcType=VARCHAR}
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into un_delegation
    (hash, delegate_addr, staking_block_num, node_id, apply_amount, redeem_locked, `status`, 
      create_time, update_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.hash,jdbcType=VARCHAR}, #{item.delegateAddr,jdbcType=VARCHAR}, #{item.stakingBlockNum,jdbcType=BIGINT}, 
        #{item.nodeId,jdbcType=VARCHAR}, #{item.applyAmount,jdbcType=VARCHAR}, #{item.redeemLocked,jdbcType=VARCHAR}, 
        #{item.status,jdbcType=INTEGER}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}
        )
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into un_delegation (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'hash'.toString() == column.value">
          #{item.hash,jdbcType=VARCHAR}
        </if>
        <if test="'delegate_addr'.toString() == column.value">
          #{item.delegateAddr,jdbcType=VARCHAR}
        </if>
        <if test="'staking_block_num'.toString() == column.value">
          #{item.stakingBlockNum,jdbcType=BIGINT}
        </if>
        <if test="'node_id'.toString() == column.value">
          #{item.nodeId,jdbcType=VARCHAR}
        </if>
        <if test="'apply_amount'.toString() == column.value">
          #{item.applyAmount,jdbcType=VARCHAR}
        </if>
        <if test="'redeem_locked'.toString() == column.value">
          #{item.redeemLocked,jdbcType=VARCHAR}
        </if>
        <if test="'status'.toString() == column.value">
          #{item.status,jdbcType=INTEGER}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_time'.toString() == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>