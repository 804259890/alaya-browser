<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platon.browser.dao.mapper.Erc20TokenTransferRecordMapper">
  <resultMap id="BaseResultMap" type="com.platon.browser.dao.entity.Erc20TokenTransferRecord">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="tx_hash" jdbcType="VARCHAR" property="txHash" />
    <result column="block_number" jdbcType="BIGINT" property="blockNumber" />
    <result column="tx_from" jdbcType="VARCHAR" property="txFrom" />
    <result column="contract" jdbcType="VARCHAR" property="contract" />
    <result column="transfer_to" jdbcType="VARCHAR" property="transferTo" />
    <result column="transfer_value" jdbcType="DECIMAL" property="transferValue" />
    <result column="decimal" jdbcType="INTEGER" property="decimal" />
    <result column="symbol" jdbcType="VARCHAR" property="symbol" />
    <result column="method_sign" jdbcType="VARCHAR" property="methodSign" />
    <result column="result" jdbcType="INTEGER" property="result" />
    <result column="block_timestamp" jdbcType="TIMESTAMP" property="blockTimestamp" />
    <result column="value" jdbcType="DECIMAL" property="value" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, tx_hash, block_number, tx_from, contract, transfer_to, transfer_value, `decimal`, 
    symbol, method_sign, `result`, block_timestamp, `value`, create_time
  </sql>
  <select id="selectByExample" parameterType="com.platon.browser.dao.entity.Erc20TokenTransferRecordExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from erc20_token_transfer_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from erc20_token_transfer_record
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from erc20_token_transfer_record
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.platon.browser.dao.entity.Erc20TokenTransferRecordExample">
    delete from erc20_token_transfer_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.platon.browser.dao.entity.Erc20TokenTransferRecord" useGeneratedKeys="true" keyProperty="id">
    insert into erc20_token_transfer_record (tx_hash, block_number,
      tx_from, contract, transfer_to, 
      transfer_value, `decimal`, symbol, 
      method_sign, `result`, block_timestamp, 
      `value`, create_time)
    values (#{txHash,jdbcType=VARCHAR}, #{blockNumber,jdbcType=BIGINT},
      #{txFrom,jdbcType=VARCHAR}, #{contract,jdbcType=VARCHAR}, #{transferTo,jdbcType=VARCHAR}, 
      #{transferValue,jdbcType=DECIMAL}, #{decimal,jdbcType=INTEGER}, #{symbol,jdbcType=VARCHAR}, 
      #{methodSign,jdbcType=VARCHAR}, #{result,jdbcType=INTEGER}, #{blockTimestamp,jdbcType=TIMESTAMP}, 
      #{value,jdbcType=DECIMAL}, #{createTime,jdbcType=TIMESTAMP})
  </insert>

  <select id="countByExample" parameterType="com.platon.browser.dao.entity.Erc20TokenTransferRecordExample" resultType="java.lang.Long">
    select count(*) from erc20_token_transfer_record
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

  <update id="updateByExampleSelective" parameterType="map">
    update erc20_token_transfer_record
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.txHash != null">
        tx_hash = #{record.txHash,jdbcType=VARCHAR},
      </if>
      <if test="record.blockNumber != null">
        block_number = #{record.blockNumber,jdbcType=BIGINT},
      </if>
      <if test="record.txFrom != null">
        tx_from = #{record.txFrom,jdbcType=VARCHAR},
      </if>
      <if test="record.contract != null">
        contract = #{record.contract,jdbcType=VARCHAR},
      </if>
      <if test="record.transferTo != null">
        transfer_to = #{record.transferTo,jdbcType=VARCHAR},
      </if>
      <if test="record.transferValue != null">
        transfer_value = #{record.transferValue,jdbcType=DECIMAL},
      </if>
      <if test="record.decimal != null">
        `decimal` = #{record.decimal,jdbcType=INTEGER},
      </if>
      <if test="record.symbol != null">
        symbol = #{record.symbol,jdbcType=VARCHAR},
      </if>
      <if test="record.methodSign != null">
        method_sign = #{record.methodSign,jdbcType=VARCHAR},
      </if>
      <if test="record.result != null">
        `result` = #{record.result,jdbcType=INTEGER},
      </if>
      <if test="record.blockTimestamp != null">
        block_timestamp = #{record.blockTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="record.value != null">
        `value` = #{record.value,jdbcType=DECIMAL},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update erc20_token_transfer_record
    set id = #{record.id,jdbcType=BIGINT},
      tx_hash = #{record.txHash,jdbcType=VARCHAR},
      block_number = #{record.blockNumber,jdbcType=BIGINT},
      tx_from = #{record.txFrom,jdbcType=VARCHAR},
      contract = #{record.contract,jdbcType=VARCHAR},
      transfer_to = #{record.transferTo,jdbcType=VARCHAR},
      transfer_value = #{record.transferValue,jdbcType=DECIMAL},
      `decimal` = #{record.decimal,jdbcType=INTEGER},
      symbol = #{record.symbol,jdbcType=VARCHAR},
      method_sign = #{record.methodSign,jdbcType=VARCHAR},
      `result` = #{record.result,jdbcType=INTEGER},
      block_timestamp = #{record.blockTimestamp,jdbcType=TIMESTAMP},
      `value` = #{record.value,jdbcType=DECIMAL},
      create_time = #{record.createTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.platon.browser.dao.entity.Erc20TokenTransferRecord">
    update erc20_token_transfer_record
    <set>
      <if test="txHash != null">
        tx_hash = #{txHash,jdbcType=VARCHAR},
      </if>
      <if test="blockNumber != null">
        block_number = #{blockNumber,jdbcType=BIGINT},
      </if>
      <if test="txFrom != null">
        tx_from = #{txFrom,jdbcType=VARCHAR},
      </if>
      <if test="contract != null">
        contract = #{contract,jdbcType=VARCHAR},
      </if>
      <if test="transferTo != null">
        transfer_to = #{transferTo,jdbcType=VARCHAR},
      </if>
      <if test="transferValue != null">
        transfer_value = #{transferValue,jdbcType=DECIMAL},
      </if>
      <if test="decimal != null">
        `decimal` = #{decimal,jdbcType=INTEGER},
      </if>
      <if test="symbol != null">
        symbol = #{symbol,jdbcType=VARCHAR},
      </if>
      <if test="methodSign != null">
        method_sign = #{methodSign,jdbcType=VARCHAR},
      </if>
      <if test="result != null">
        `result` = #{result,jdbcType=INTEGER},
      </if>
      <if test="blockTimestamp != null">
        block_timestamp = #{blockTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="value != null">
        `value` = #{value,jdbcType=DECIMAL},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.platon.browser.dao.entity.Erc20TokenTransferRecord">
    update erc20_token_transfer_record
    set tx_hash = #{txHash,jdbcType=VARCHAR},
      block_number = #{blockNumber,jdbcType=BIGINT},
      tx_from = #{txFrom,jdbcType=VARCHAR},
      contract = #{contract,jdbcType=VARCHAR},
      transfer_to = #{transferTo,jdbcType=VARCHAR},
      transfer_value = #{transferValue,jdbcType=DECIMAL},
      `decimal` = #{decimal,jdbcType=INTEGER},
      symbol = #{symbol,jdbcType=VARCHAR},
      method_sign = #{methodSign,jdbcType=VARCHAR},
      `result` = #{result,jdbcType=INTEGER},
      block_timestamp = #{blockTimestamp,jdbcType=TIMESTAMP},
      `value` = #{value,jdbcType=DECIMAL},
      create_time = #{createTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <insert id="batchInsert" parameterType="map" useGeneratedKeys="true" keyProperty="id">
    insert into erc20_token_transfer_record
    (tx_hash, block_number, tx_from, contract, transfer_to, transfer_value, `decimal`,
      symbol, method_sign, `result`, block_timestamp, `value`, create_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.txHash,jdbcType=VARCHAR}, #{item.blockNumber,jdbcType=BIGINT},
        #{item.txFrom,jdbcType=VARCHAR}, #{item.contract,jdbcType=VARCHAR}, #{item.transferTo,jdbcType=VARCHAR}, 
        #{item.transferValue,jdbcType=DECIMAL}, #{item.decimal,jdbcType=INTEGER}, #{item.symbol,jdbcType=VARCHAR}, 
        #{item.methodSign,jdbcType=VARCHAR}, #{item.result,jdbcType=INTEGER}, #{item.blockTimestamp,jdbcType=TIMESTAMP}, 
        #{item.value,jdbcType=DECIMAL}, #{item.createTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>

</mapper>