<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platon.browser.dao.mapper.Erc20TokenMapper">
  <resultMap id="BaseResultMap" type="com.platon.browser.dao.entity.Erc20Token">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="symbol" jdbcType="VARCHAR" property="symbol" />
    <result column="decimal" jdbcType="INTEGER" property="decimal" />
    <result column="total_supply" jdbcType="DECIMAL" property="totalSupply" />
    <result column="creator" jdbcType="VARCHAR" property="creator" />
    <result column="tx_hash" jdbcType="VARCHAR" property="txHash" />
    <result column="type" jdbcType="CHAR" property="type" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="block_timestamp" jdbcType="TIMESTAMP" property="blockTimestamp" />
    <result column="tx_count" jdbcType="INTEGER" property="txCount" />
    <result column="holder" jdbcType="INTEGER" property="holder"/>
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, address, `name`, symbol, `decimal`, total_supply, creator, tx_hash,
    `type`, status, block_timestamp, tx_count, create_time
  </sql>
  <select id="selectByExample" parameterType="com.platon.browser.dao.entity.Erc20TokenExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from erc20_token
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from erc20_token
    where id = #{id,jdbcType=BIGINT}
  </select>

  <select id="selectByAddress" parameterType="java.lang.String" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from erc20_token
    where address = #{address,jdbcType=VARCHAR}
  </select>

  <select id="listErc20Token" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from erc20_token
    where 1 = 1
    <if test="status != null">
      AND status = #{status}
    </if>
    order by total_supply,holder desc
    limit #{offset}, #{size}
  </select>

  <select id="totalErc20Token" parameterType="java.util.Map" resultType="java.lang.Integer">
    select
    count(*) total
    from erc20_token
    where 1 = 1
    <if test="status != null">
      AND status = #{status}
    </if>
  </select>

  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from erc20_token
    where id = #{id,jdbcType=BIGINT}
  </delete>

  <delete id="deleteByExample" parameterType="com.platon.browser.dao.entity.Erc20TokenExample">
    delete from erc20_token
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.platon.browser.dao.entity.Erc20Token" useGeneratedKeys="true" keyProperty="id">
    insert into erc20_token (address, `name`,
      symbol, `decimal`, total_supply, 
      creator, tx_hash,
      `type`, block_timestamp, tx_count,holder,
      create_time)
    values ( #{address,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
      #{symbol,jdbcType=VARCHAR}, #{decimal,jdbcType=INTEGER}, #{totalSupply,jdbcType=DECIMAL}, 
      #{creator,jdbcType=VARCHAR}, #{txHash,jdbcType=VARCHAR},
      #{type,jdbcType=CHAR}, #{blockTimestamp,jdbcType=TIMESTAMP}, #{txCount,jdbcType=INTEGER},
      #{holder,jdbcType=INTEGER},#{createTime,jdbcType=TIMESTAMP})
  </insert>

  <select id="countByExample" parameterType="com.platon.browser.dao.entity.Erc20TokenExample" resultType="java.lang.Long">
    select count(*) from erc20_token
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update erc20_token
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.symbol != null">
        symbol = #{record.symbol,jdbcType=VARCHAR},
      </if>
      <if test="record.decimal != null">
        `decimal` = #{record.decimal,jdbcType=INTEGER},
      </if>
      <if test="record.totalSupply != null">
        total_supply = #{record.totalSupply,jdbcType=DECIMAL},
      </if>
      <if test="record.txCount != null">
        tx_count = #{record.txCount,jdbcType=VARCHAR},
      </if>
      <if test="record.holder != null">
        holder = #{record.holder,jdbcType=VARCHAR},
      </if>
      <if test="record.creator != null">
        creator = #{record.creator,jdbcType=VARCHAR},
      </if>
      <if test="record.txHash != null">
        tx_hash = #{record.txHash,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=CHAR},
      </if>
      <if test="record.blockTimestamp != null">
        block_timestamp = #{record.blockTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>

  <update id="updateByPrimaryKeySelective" parameterType="com.platon.browser.dao.entity.Erc20Token">
    update erc20_token
    <set>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="symbol != null">
        symbol = #{symbol,jdbcType=VARCHAR},
      </if>
      <if test="decimal != null">
        `decimal` = #{decimal,jdbcType=INTEGER},
      </if>
      <if test="totalSupply != null">
        total_supply = #{totalSupply,jdbcType=DECIMAL},
      </if>
      <if test="txCount != null">
        tx_count = #{txCount,jdbcType=INTEGER},
      </if>
      <if test="holder != null">
        holder = #{holder,jdbcType=INTEGER},
      </if>
      <if test="creator != null">
        creator = #{creator,jdbcType=VARCHAR},
      </if>
      <if test="txHash != null">
        tx_hash = #{txHash,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=CHAR},
      </if>
      <if test="blockTimestamp != null">
        block_timestamp = #{blockTimestamp,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>

  <insert id="batchInsert" parameterType="map" useGeneratedKeys="true" keyProperty="id">
    insert into erc20_token
    (address, `name`, symbol, `decimal`, total_supply, creator, tx_hash,
    `type`, block_timestamp, tx_count,holder, create_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.address,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR},
      #{item.symbol,jdbcType=VARCHAR}, #{item.decimal,jdbcType=INTEGER}, #{item.totalSupply,jdbcType=DECIMAL},
      #{item.creator,jdbcType=VARCHAR}, #{item.txHash,jdbcType=VARCHAR},
      #{item.type,jdbcType=CHAR}, #{item.blockTimestamp,jdbcType=TIMESTAMP},
      #{item.txCount,jdbcType=INTEGER},#{item.holder,jdbcType=INTEGER}, now())
    </foreach>
  </insert>

  <update id="batchUpdateTxCount">
    <foreach collection="list" item="item" index="index" separator="">
      update `erc20_token` set
      `tx_count` = `tx_count` + #{item.txCount}
      where
      `address` = #{item.address};
    </foreach>
  </update>

</mapper>