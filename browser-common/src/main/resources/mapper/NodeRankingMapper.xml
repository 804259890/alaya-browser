<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platon.browser.dao.mapper.NodeRankingMapper">
  <resultMap id="BaseResultMap" type="com.platon.browser.dao.entity.NodeRanking">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="node_id" jdbcType="VARCHAR" property="nodeId" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="port" jdbcType="INTEGER" property="port" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="intro" jdbcType="VARCHAR" property="intro" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="deposit" jdbcType="VARCHAR" property="deposit" />
    <result column="org_name" jdbcType="VARCHAR" property="orgName" />
    <result column="org_website" jdbcType="VARCHAR" property="orgWebsite" />
    <result column="chain_id" jdbcType="VARCHAR" property="chainId" />
    <result column="join_time" jdbcType="TIMESTAMP" property="joinTime" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="reward_ratio" jdbcType="DOUBLE" property="rewardRatio" />
    <result column="ranking" jdbcType="INTEGER" property="ranking" />
    <result column="election_status" jdbcType="INTEGER" property="electionStatus" />
    <result column="is_valid" jdbcType="INTEGER" property="isValid" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="begin_number" jdbcType="BIGINT" property="beginNumber" />
    <result column="end_number" jdbcType="BIGINT" property="endNumber" />
    <result column="block_count" jdbcType="BIGINT" property="blockCount" />
    <result column="reward_amount" jdbcType="VARCHAR" property="rewardAmount" />
    <result column="profit_amount" jdbcType="VARCHAR" property="profitAmount" />
    <result column="block_reward" jdbcType="VARCHAR" property="blockReward" />
    <result column="country_code" jdbcType="VARCHAR" property="countryCode" />
    <result column="location" jdbcType="VARCHAR" property="location" />
    <result column="longitude" jdbcType="VARCHAR" property="longitude" />
    <result column="latitude" jdbcType="VARCHAR" property="latitude" />
    <result column="avg_time" jdbcType="DOUBLE" property="avgTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, node_id, ip, port, `name`, `type`, intro, address, deposit, org_name, org_website, 
    chain_id, join_time, create_time, update_time, reward_ratio, ranking, election_status, 
    is_valid, url, begin_number, end_number, block_count, reward_amount, profit_amount, 
    block_reward, country_code, `location`, longitude, latitude, avg_time
  </sql>
  <select id="selectByExample" parameterType="com.platon.browser.dao.entity.NodeRankingExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from node_ranking
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from node_ranking
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from node_ranking
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.platon.browser.dao.entity.NodeRankingExample">
    delete from node_ranking
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.platon.browser.dao.entity.NodeRanking">
    insert into node_ranking (id, node_id, ip, 
      port, `name`, `type`, intro, 
      address, deposit, org_name, 
      org_website, chain_id, join_time, 
      create_time, update_time, reward_ratio, 
      ranking, election_status, is_valid, 
      url, begin_number, end_number, 
      block_count, reward_amount, profit_amount, 
      block_reward, country_code, `location`, 
      longitude, latitude, avg_time
      )
    values (#{id,jdbcType=BIGINT}, #{nodeId,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, 
      #{port,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, #{intro,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{deposit,jdbcType=VARCHAR}, #{orgName,jdbcType=VARCHAR}, 
      #{orgWebsite,jdbcType=VARCHAR}, #{chainId,jdbcType=VARCHAR}, #{joinTime,jdbcType=TIMESTAMP}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{rewardRatio,jdbcType=DOUBLE}, 
      #{ranking,jdbcType=INTEGER}, #{electionStatus,jdbcType=INTEGER}, #{isValid,jdbcType=INTEGER}, 
      #{url,jdbcType=VARCHAR}, #{beginNumber,jdbcType=BIGINT}, #{endNumber,jdbcType=BIGINT}, 
      #{blockCount,jdbcType=BIGINT}, #{rewardAmount,jdbcType=VARCHAR}, #{profitAmount,jdbcType=VARCHAR}, 
      #{blockReward,jdbcType=VARCHAR}, #{countryCode,jdbcType=VARCHAR}, #{location,jdbcType=VARCHAR}, 
      #{longitude,jdbcType=VARCHAR}, #{latitude,jdbcType=VARCHAR}, #{avgTime,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.platon.browser.dao.entity.NodeRanking">
    insert into node_ranking
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="nodeId != null">
        node_id,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="port != null">
        port,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="type != null">
        `type`,
      </if>
      <if test="intro != null">
        intro,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="deposit != null">
        deposit,
      </if>
      <if test="orgName != null">
        org_name,
      </if>
      <if test="orgWebsite != null">
        org_website,
      </if>
      <if test="chainId != null">
        chain_id,
      </if>
      <if test="joinTime != null">
        join_time,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="rewardRatio != null">
        reward_ratio,
      </if>
      <if test="ranking != null">
        ranking,
      </if>
      <if test="electionStatus != null">
        election_status,
      </if>
      <if test="isValid != null">
        is_valid,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="beginNumber != null">
        begin_number,
      </if>
      <if test="endNumber != null">
        end_number,
      </if>
      <if test="blockCount != null">
        block_count,
      </if>
      <if test="rewardAmount != null">
        reward_amount,
      </if>
      <if test="profitAmount != null">
        profit_amount,
      </if>
      <if test="blockReward != null">
        block_reward,
      </if>
      <if test="countryCode != null">
        country_code,
      </if>
      <if test="location != null">
        `location`,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="avgTime != null">
        avg_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="nodeId != null">
        #{nodeId,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="port != null">
        #{port,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="intro != null">
        #{intro,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="deposit != null">
        #{deposit,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null">
        #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="orgWebsite != null">
        #{orgWebsite,jdbcType=VARCHAR},
      </if>
      <if test="chainId != null">
        #{chainId,jdbcType=VARCHAR},
      </if>
      <if test="joinTime != null">
        #{joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rewardRatio != null">
        #{rewardRatio,jdbcType=DOUBLE},
      </if>
      <if test="ranking != null">
        #{ranking,jdbcType=INTEGER},
      </if>
      <if test="electionStatus != null">
        #{electionStatus,jdbcType=INTEGER},
      </if>
      <if test="isValid != null">
        #{isValid,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="beginNumber != null">
        #{beginNumber,jdbcType=BIGINT},
      </if>
      <if test="endNumber != null">
        #{endNumber,jdbcType=BIGINT},
      </if>
      <if test="blockCount != null">
        #{blockCount,jdbcType=BIGINT},
      </if>
      <if test="rewardAmount != null">
        #{rewardAmount,jdbcType=VARCHAR},
      </if>
      <if test="profitAmount != null">
        #{profitAmount,jdbcType=VARCHAR},
      </if>
      <if test="blockReward != null">
        #{blockReward,jdbcType=VARCHAR},
      </if>
      <if test="countryCode != null">
        #{countryCode,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        #{location,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="avgTime != null">
        #{avgTime,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.platon.browser.dao.entity.NodeRankingExample" resultType="java.lang.Long">
    select count(*) from node_ranking
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update node_ranking
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.nodeId != null">
        node_id = #{record.nodeId,jdbcType=VARCHAR},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.port != null">
        port = #{record.port,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        `type` = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.intro != null">
        intro = #{record.intro,jdbcType=VARCHAR},
      </if>
      <if test="record.address != null">
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.deposit != null">
        deposit = #{record.deposit,jdbcType=VARCHAR},
      </if>
      <if test="record.orgName != null">
        org_name = #{record.orgName,jdbcType=VARCHAR},
      </if>
      <if test="record.orgWebsite != null">
        org_website = #{record.orgWebsite,jdbcType=VARCHAR},
      </if>
      <if test="record.chainId != null">
        chain_id = #{record.chainId,jdbcType=VARCHAR},
      </if>
      <if test="record.joinTime != null">
        join_time = #{record.joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.rewardRatio != null">
        reward_ratio = #{record.rewardRatio,jdbcType=DOUBLE},
      </if>
      <if test="record.ranking != null">
        ranking = #{record.ranking,jdbcType=INTEGER},
      </if>
      <if test="record.electionStatus != null">
        election_status = #{record.electionStatus,jdbcType=INTEGER},
      </if>
      <if test="record.isValid != null">
        is_valid = #{record.isValid,jdbcType=INTEGER},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.beginNumber != null">
        begin_number = #{record.beginNumber,jdbcType=BIGINT},
      </if>
      <if test="record.endNumber != null">
        end_number = #{record.endNumber,jdbcType=BIGINT},
      </if>
      <if test="record.blockCount != null">
        block_count = #{record.blockCount,jdbcType=BIGINT},
      </if>
      <if test="record.rewardAmount != null">
        reward_amount = #{record.rewardAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.profitAmount != null">
        profit_amount = #{record.profitAmount,jdbcType=VARCHAR},
      </if>
      <if test="record.blockReward != null">
        block_reward = #{record.blockReward,jdbcType=VARCHAR},
      </if>
      <if test="record.countryCode != null">
        country_code = #{record.countryCode,jdbcType=VARCHAR},
      </if>
      <if test="record.location != null">
        `location` = #{record.location,jdbcType=VARCHAR},
      </if>
      <if test="record.longitude != null">
        longitude = #{record.longitude,jdbcType=VARCHAR},
      </if>
      <if test="record.latitude != null">
        latitude = #{record.latitude,jdbcType=VARCHAR},
      </if>
      <if test="record.avgTime != null">
        avg_time = #{record.avgTime,jdbcType=DOUBLE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update node_ranking
    set id = #{record.id,jdbcType=BIGINT},
      node_id = #{record.nodeId,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      port = #{record.port,jdbcType=INTEGER},
      `name` = #{record.name,jdbcType=VARCHAR},
      `type` = #{record.type,jdbcType=INTEGER},
      intro = #{record.intro,jdbcType=VARCHAR},
      address = #{record.address,jdbcType=VARCHAR},
      deposit = #{record.deposit,jdbcType=VARCHAR},
      org_name = #{record.orgName,jdbcType=VARCHAR},
      org_website = #{record.orgWebsite,jdbcType=VARCHAR},
      chain_id = #{record.chainId,jdbcType=VARCHAR},
      join_time = #{record.joinTime,jdbcType=TIMESTAMP},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      reward_ratio = #{record.rewardRatio,jdbcType=DOUBLE},
      ranking = #{record.ranking,jdbcType=INTEGER},
      election_status = #{record.electionStatus,jdbcType=INTEGER},
      is_valid = #{record.isValid,jdbcType=INTEGER},
      url = #{record.url,jdbcType=VARCHAR},
      begin_number = #{record.beginNumber,jdbcType=BIGINT},
      end_number = #{record.endNumber,jdbcType=BIGINT},
      block_count = #{record.blockCount,jdbcType=BIGINT},
      reward_amount = #{record.rewardAmount,jdbcType=VARCHAR},
      profit_amount = #{record.profitAmount,jdbcType=VARCHAR},
      block_reward = #{record.blockReward,jdbcType=VARCHAR},
      country_code = #{record.countryCode,jdbcType=VARCHAR},
      `location` = #{record.location,jdbcType=VARCHAR},
      longitude = #{record.longitude,jdbcType=VARCHAR},
      latitude = #{record.latitude,jdbcType=VARCHAR},
      avg_time = #{record.avgTime,jdbcType=DOUBLE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.platon.browser.dao.entity.NodeRanking">
    update node_ranking
    <set>
      <if test="nodeId != null">
        node_id = #{nodeId,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="port != null">
        port = #{port,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        `type` = #{type,jdbcType=INTEGER},
      </if>
      <if test="intro != null">
        intro = #{intro,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="deposit != null">
        deposit = #{deposit,jdbcType=VARCHAR},
      </if>
      <if test="orgName != null">
        org_name = #{orgName,jdbcType=VARCHAR},
      </if>
      <if test="orgWebsite != null">
        org_website = #{orgWebsite,jdbcType=VARCHAR},
      </if>
      <if test="chainId != null">
        chain_id = #{chainId,jdbcType=VARCHAR},
      </if>
      <if test="joinTime != null">
        join_time = #{joinTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="rewardRatio != null">
        reward_ratio = #{rewardRatio,jdbcType=DOUBLE},
      </if>
      <if test="ranking != null">
        ranking = #{ranking,jdbcType=INTEGER},
      </if>
      <if test="electionStatus != null">
        election_status = #{electionStatus,jdbcType=INTEGER},
      </if>
      <if test="isValid != null">
        is_valid = #{isValid,jdbcType=INTEGER},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="beginNumber != null">
        begin_number = #{beginNumber,jdbcType=BIGINT},
      </if>
      <if test="endNumber != null">
        end_number = #{endNumber,jdbcType=BIGINT},
      </if>
      <if test="blockCount != null">
        block_count = #{blockCount,jdbcType=BIGINT},
      </if>
      <if test="rewardAmount != null">
        reward_amount = #{rewardAmount,jdbcType=VARCHAR},
      </if>
      <if test="profitAmount != null">
        profit_amount = #{profitAmount,jdbcType=VARCHAR},
      </if>
      <if test="blockReward != null">
        block_reward = #{blockReward,jdbcType=VARCHAR},
      </if>
      <if test="countryCode != null">
        country_code = #{countryCode,jdbcType=VARCHAR},
      </if>
      <if test="location != null">
        `location` = #{location,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=VARCHAR},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=VARCHAR},
      </if>
      <if test="avgTime != null">
        avg_time = #{avgTime,jdbcType=DOUBLE},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.platon.browser.dao.entity.NodeRanking">
    update node_ranking
    set node_id = #{nodeId,jdbcType=VARCHAR},
      ip = #{ip,jdbcType=VARCHAR},
      port = #{port,jdbcType=INTEGER},
      `name` = #{name,jdbcType=VARCHAR},
      `type` = #{type,jdbcType=INTEGER},
      intro = #{intro,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      deposit = #{deposit,jdbcType=VARCHAR},
      org_name = #{orgName,jdbcType=VARCHAR},
      org_website = #{orgWebsite,jdbcType=VARCHAR},
      chain_id = #{chainId,jdbcType=VARCHAR},
      join_time = #{joinTime,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      reward_ratio = #{rewardRatio,jdbcType=DOUBLE},
      ranking = #{ranking,jdbcType=INTEGER},
      election_status = #{electionStatus,jdbcType=INTEGER},
      is_valid = #{isValid,jdbcType=INTEGER},
      url = #{url,jdbcType=VARCHAR},
      begin_number = #{beginNumber,jdbcType=BIGINT},
      end_number = #{endNumber,jdbcType=BIGINT},
      block_count = #{blockCount,jdbcType=BIGINT},
      reward_amount = #{rewardAmount,jdbcType=VARCHAR},
      profit_amount = #{profitAmount,jdbcType=VARCHAR},
      block_reward = #{blockReward,jdbcType=VARCHAR},
      country_code = #{countryCode,jdbcType=VARCHAR},
      `location` = #{location,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=VARCHAR},
      latitude = #{latitude,jdbcType=VARCHAR},
      avg_time = #{avgTime,jdbcType=DOUBLE}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into node_ranking
    (id, node_id, ip, port, `name`, `type`, intro, address, deposit, org_name, org_website, 
      chain_id, join_time, create_time, update_time, reward_ratio, ranking, election_status, 
      is_valid, url, begin_number, end_number, block_count, reward_amount, profit_amount, 
      block_reward, country_code, `location`, longitude, latitude, avg_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=BIGINT}, #{item.nodeId,jdbcType=VARCHAR}, #{item.ip,jdbcType=VARCHAR}, 
        #{item.port,jdbcType=INTEGER}, #{item.name,jdbcType=VARCHAR}, #{item.type,jdbcType=INTEGER}, 
        #{item.intro,jdbcType=VARCHAR}, #{item.address,jdbcType=VARCHAR}, #{item.deposit,jdbcType=VARCHAR}, 
        #{item.orgName,jdbcType=VARCHAR}, #{item.orgWebsite,jdbcType=VARCHAR}, #{item.chainId,jdbcType=VARCHAR}, 
        #{item.joinTime,jdbcType=TIMESTAMP}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.updateTime,jdbcType=TIMESTAMP}, 
        #{item.rewardRatio,jdbcType=DOUBLE}, #{item.ranking,jdbcType=INTEGER}, #{item.electionStatus,jdbcType=INTEGER}, 
        #{item.isValid,jdbcType=INTEGER}, #{item.url,jdbcType=VARCHAR}, #{item.beginNumber,jdbcType=BIGINT}, 
        #{item.endNumber,jdbcType=BIGINT}, #{item.blockCount,jdbcType=BIGINT}, #{item.rewardAmount,jdbcType=VARCHAR}, 
        #{item.profitAmount,jdbcType=VARCHAR}, #{item.blockReward,jdbcType=VARCHAR}, #{item.countryCode,jdbcType=VARCHAR}, 
        #{item.location,jdbcType=VARCHAR}, #{item.longitude,jdbcType=VARCHAR}, #{item.latitude,jdbcType=VARCHAR}, 
        #{item.avgTime,jdbcType=DOUBLE})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into node_ranking (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=BIGINT}
        </if>
        <if test="'node_id'.toString() == column.value">
          #{item.nodeId,jdbcType=VARCHAR}
        </if>
        <if test="'ip'.toString() == column.value">
          #{item.ip,jdbcType=VARCHAR}
        </if>
        <if test="'port'.toString() == column.value">
          #{item.port,jdbcType=INTEGER}
        </if>
        <if test="'name'.toString() == column.value">
          #{item.name,jdbcType=VARCHAR}
        </if>
        <if test="'type'.toString() == column.value">
          #{item.type,jdbcType=INTEGER}
        </if>
        <if test="'intro'.toString() == column.value">
          #{item.intro,jdbcType=VARCHAR}
        </if>
        <if test="'address'.toString() == column.value">
          #{item.address,jdbcType=VARCHAR}
        </if>
        <if test="'deposit'.toString() == column.value">
          #{item.deposit,jdbcType=VARCHAR}
        </if>
        <if test="'org_name'.toString() == column.value">
          #{item.orgName,jdbcType=VARCHAR}
        </if>
        <if test="'org_website'.toString() == column.value">
          #{item.orgWebsite,jdbcType=VARCHAR}
        </if>
        <if test="'chain_id'.toString() == column.value">
          #{item.chainId,jdbcType=VARCHAR}
        </if>
        <if test="'join_time'.toString() == column.value">
          #{item.joinTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_time'.toString() == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'reward_ratio'.toString() == column.value">
          #{item.rewardRatio,jdbcType=DOUBLE}
        </if>
        <if test="'ranking'.toString() == column.value">
          #{item.ranking,jdbcType=INTEGER}
        </if>
        <if test="'election_status'.toString() == column.value">
          #{item.electionStatus,jdbcType=INTEGER}
        </if>
        <if test="'is_valid'.toString() == column.value">
          #{item.isValid,jdbcType=INTEGER}
        </if>
        <if test="'url'.toString() == column.value">
          #{item.url,jdbcType=VARCHAR}
        </if>
        <if test="'begin_number'.toString() == column.value">
          #{item.beginNumber,jdbcType=BIGINT}
        </if>
        <if test="'end_number'.toString() == column.value">
          #{item.endNumber,jdbcType=BIGINT}
        </if>
        <if test="'block_count'.toString() == column.value">
          #{item.blockCount,jdbcType=BIGINT}
        </if>
        <if test="'reward_amount'.toString() == column.value">
          #{item.rewardAmount,jdbcType=VARCHAR}
        </if>
        <if test="'profit_amount'.toString() == column.value">
          #{item.profitAmount,jdbcType=VARCHAR}
        </if>
        <if test="'block_reward'.toString() == column.value">
          #{item.blockReward,jdbcType=VARCHAR}
        </if>
        <if test="'country_code'.toString() == column.value">
          #{item.countryCode,jdbcType=VARCHAR}
        </if>
        <if test="'location'.toString() == column.value">
          #{item.location,jdbcType=VARCHAR}
        </if>
        <if test="'longitude'.toString() == column.value">
          #{item.longitude,jdbcType=VARCHAR}
        </if>
        <if test="'latitude'.toString() == column.value">
          #{item.latitude,jdbcType=VARCHAR}
        </if>
        <if test="'avg_time'.toString() == column.value">
          #{item.avgTime,jdbcType=DOUBLE}
        </if>
      </foreach>
      )
    </foreach>
  </insert>


</mapper>