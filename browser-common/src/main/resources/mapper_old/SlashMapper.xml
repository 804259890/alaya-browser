<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platon.browser.dao.mapper.SlashMapper">
  <resultMap id="BaseResultMap" type="com.platon.browser.dao.entity.Slash">
    <id column="hash" jdbcType="VARCHAR" property="hash" />
    <result column="node_id" jdbcType="VARCHAR" property="nodeId" />
    <result column="slash_rate" jdbcType="VARCHAR" property="slashRate" />
    <result column="is_quit" jdbcType="INTEGER" property="isQuit" />
    <result column="reward" jdbcType="VARCHAR" property="reward" />
    <result column="denefit_addr" jdbcType="VARCHAR" property="denefitAddr" />
    <result column="data" jdbcType="VARCHAR" property="data" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    hash, node_id, slash_rate, is_quit, reward, denefit_addr, `data`, `status`, create_time, 
    update_time
  </sql>
  <select id="selectByExample" parameterType="com.platon.browser.dao.entity.SlashExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from slash
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from slash
    where hash = #{hash,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from slash
    where hash = #{hash,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.platon.browser.dao.entity.SlashExample">
    delete from slash
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.platon.browser.dao.entity.Slash">
    insert into slash (hash, node_id, slash_rate, 
      is_quit, reward, denefit_addr, 
      `data`, `status`, create_time, 
      update_time)
    values (#{hash,jdbcType=VARCHAR}, #{nodeId,jdbcType=VARCHAR}, #{slashRate,jdbcType=VARCHAR}, 
      #{isQuit,jdbcType=INTEGER}, #{reward,jdbcType=VARCHAR}, #{denefitAddr,jdbcType=VARCHAR}, 
      #{data,jdbcType=VARCHAR}, #{status,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.platon.browser.dao.entity.Slash">
    insert into slash
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="hash != null">
        hash,
      </if>
      <if test="nodeId != null">
        node_id,
      </if>
      <if test="slashRate != null">
        slash_rate,
      </if>
      <if test="isQuit != null">
        is_quit,
      </if>
      <if test="reward != null">
        reward,
      </if>
      <if test="denefitAddr != null">
        denefit_addr,
      </if>
      <if test="data != null">
        `data`,
      </if>
      <if test="status != null">
        `status`,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="hash != null">
        #{hash,jdbcType=VARCHAR},
      </if>
      <if test="nodeId != null">
        #{nodeId,jdbcType=VARCHAR},
      </if>
      <if test="slashRate != null">
        #{slashRate,jdbcType=VARCHAR},
      </if>
      <if test="isQuit != null">
        #{isQuit,jdbcType=INTEGER},
      </if>
      <if test="reward != null">
        #{reward,jdbcType=VARCHAR},
      </if>
      <if test="denefitAddr != null">
        #{denefitAddr,jdbcType=VARCHAR},
      </if>
      <if test="data != null">
        #{data,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.platon.browser.dao.entity.SlashExample" resultType="java.lang.Long">
    select count(*) from slash
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update slash
    <set>
      <if test="record.hash != null">
        hash = #{record.hash,jdbcType=VARCHAR},
      </if>
      <if test="record.nodeId != null">
        node_id = #{record.nodeId,jdbcType=VARCHAR},
      </if>
      <if test="record.slashRate != null">
        slash_rate = #{record.slashRate,jdbcType=VARCHAR},
      </if>
      <if test="record.isQuit != null">
        is_quit = #{record.isQuit,jdbcType=INTEGER},
      </if>
      <if test="record.reward != null">
        reward = #{record.reward,jdbcType=VARCHAR},
      </if>
      <if test="record.denefitAddr != null">
        denefit_addr = #{record.denefitAddr,jdbcType=VARCHAR},
      </if>
      <if test="record.data != null">
        `data` = #{record.data,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        `status` = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null">
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update slash
    set hash = #{record.hash,jdbcType=VARCHAR},
      node_id = #{record.nodeId,jdbcType=VARCHAR},
      slash_rate = #{record.slashRate,jdbcType=VARCHAR},
      is_quit = #{record.isQuit,jdbcType=INTEGER},
      reward = #{record.reward,jdbcType=VARCHAR},
      denefit_addr = #{record.denefitAddr,jdbcType=VARCHAR},
      `data` = #{record.data,jdbcType=VARCHAR},
      `status` = #{record.status,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.platon.browser.dao.entity.Slash">
    update slash
    <set>
      <if test="nodeId != null">
        node_id = #{nodeId,jdbcType=VARCHAR},
      </if>
      <if test="slashRate != null">
        slash_rate = #{slashRate,jdbcType=VARCHAR},
      </if>
      <if test="isQuit != null">
        is_quit = #{isQuit,jdbcType=INTEGER},
      </if>
      <if test="reward != null">
        reward = #{reward,jdbcType=VARCHAR},
      </if>
      <if test="denefitAddr != null">
        denefit_addr = #{denefitAddr,jdbcType=VARCHAR},
      </if>
      <if test="data != null">
        `data` = #{data,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        `status` = #{status,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where hash = #{hash,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.platon.browser.dao.entity.Slash">
    update slash
    set node_id = #{nodeId,jdbcType=VARCHAR},
      slash_rate = #{slashRate,jdbcType=VARCHAR},
      is_quit = #{isQuit,jdbcType=INTEGER},
      reward = #{reward,jdbcType=VARCHAR},
      denefit_addr = #{denefitAddr,jdbcType=VARCHAR},
      `data` = #{data,jdbcType=VARCHAR},
      `status` = #{status,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where hash = #{hash,jdbcType=VARCHAR}
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into slash
    (hash, node_id, slash_rate, is_quit, reward, denefit_addr, `data`, `status`, create_time, 
      update_time)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.hash,jdbcType=VARCHAR}, #{item.nodeId,jdbcType=VARCHAR}, #{item.slashRate,jdbcType=VARCHAR}, 
        #{item.isQuit,jdbcType=INTEGER}, #{item.reward,jdbcType=VARCHAR}, #{item.denefitAddr,jdbcType=VARCHAR}, 
        #{item.data,jdbcType=VARCHAR}, #{item.status,jdbcType=INTEGER}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.updateTime,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into slash (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'hash'.toString() == column.value">
          #{item.hash,jdbcType=VARCHAR}
        </if>
        <if test="'node_id'.toString() == column.value">
          #{item.nodeId,jdbcType=VARCHAR}
        </if>
        <if test="'slash_rate'.toString() == column.value">
          #{item.slashRate,jdbcType=VARCHAR}
        </if>
        <if test="'is_quit'.toString() == column.value">
          #{item.isQuit,jdbcType=INTEGER}
        </if>
        <if test="'reward'.toString() == column.value">
          #{item.reward,jdbcType=VARCHAR}
        </if>
        <if test="'denefit_addr'.toString() == column.value">
          #{item.denefitAddr,jdbcType=VARCHAR}
        </if>
        <if test="'data'.toString() == column.value">
          #{item.data,jdbcType=VARCHAR}
        </if>
        <if test="'status'.toString() == column.value">
          #{item.status,jdbcType=INTEGER}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_time'.toString() == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>