<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platon.browser.dao.mapper.NodeMapper">
  <resultMap id="BaseResultMap" type="com.platon.browser.dao.entity.Node">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <id column="chain_id" jdbcType="VARCHAR" property="chainId" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="prot" jdbcType="INTEGER" property="prot" />
    <result column="node_status" jdbcType="INTEGER" property="nodeStatus" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, chain_id, ip, prot, node_status
  </sql>
  <select id="selectByExample" parameterType="com.platon.browser.dao.entity.NodeExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from node
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="com.platon.browser.dao.entity.NodeKey" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from node
    where id = #{id,jdbcType=VARCHAR}
      and chain_id = #{chainId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="com.platon.browser.dao.entity.NodeKey">
    delete from node
    where id = #{id,jdbcType=VARCHAR}
      and chain_id = #{chainId,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.platon.browser.dao.entity.NodeExample">
    delete from node
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.platon.browser.dao.entity.Node">
    insert into node (id, chain_id, ip, 
      prot, node_status)
    values (#{id,jdbcType=VARCHAR}, #{chainId,jdbcType=VARCHAR}, #{ip,jdbcType=VARCHAR}, 
      #{prot,jdbcType=INTEGER}, #{nodeStatus,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.platon.browser.dao.entity.Node">
    insert into node
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="chainId != null">
        chain_id,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="prot != null">
        prot,
      </if>
      <if test="nodeStatus != null">
        node_status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="chainId != null">
        #{chainId,jdbcType=VARCHAR},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="prot != null">
        #{prot,jdbcType=INTEGER},
      </if>
      <if test="nodeStatus != null">
        #{nodeStatus,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.platon.browser.dao.entity.NodeExample" resultType="java.lang.Long">
    select count(*) from node
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update node
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.chainId != null">
        chain_id = #{record.chainId,jdbcType=VARCHAR},
      </if>
      <if test="record.ip != null">
        ip = #{record.ip,jdbcType=VARCHAR},
      </if>
      <if test="record.prot != null">
        prot = #{record.prot,jdbcType=INTEGER},
      </if>
      <if test="record.nodeStatus != null">
        node_status = #{record.nodeStatus,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update node
    set id = #{record.id,jdbcType=VARCHAR},
      chain_id = #{record.chainId,jdbcType=VARCHAR},
      ip = #{record.ip,jdbcType=VARCHAR},
      prot = #{record.prot,jdbcType=INTEGER},
      node_status = #{record.nodeStatus,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.platon.browser.dao.entity.Node">
    update node
    <set>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="prot != null">
        prot = #{prot,jdbcType=INTEGER},
      </if>
      <if test="nodeStatus != null">
        node_status = #{nodeStatus,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
      and chain_id = #{chainId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.platon.browser.dao.entity.Node">
    update node
    set ip = #{ip,jdbcType=VARCHAR},
      prot = #{prot,jdbcType=INTEGER},
      node_status = #{nodeStatus,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
      and chain_id = #{chainId,jdbcType=VARCHAR}
  </update>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into node
    (id, chain_id, ip, prot, node_status)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=VARCHAR}, #{item.chainId,jdbcType=VARCHAR}, #{item.ip,jdbcType=VARCHAR}, 
        #{item.prot,jdbcType=INTEGER}, #{item.nodeStatus,jdbcType=INTEGER})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into node (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=VARCHAR}
        </if>
        <if test="'chain_id'.toString() == column.value">
          #{item.chainId,jdbcType=VARCHAR}
        </if>
        <if test="'ip'.toString() == column.value">
          #{item.ip,jdbcType=VARCHAR}
        </if>
        <if test="'prot'.toString() == column.value">
          #{item.prot,jdbcType=INTEGER}
        </if>
        <if test="'node_status'.toString() == column.value">
          #{item.nodeStatus,jdbcType=INTEGER}
        </if>
      </foreach>
      )
    </foreach>
  </insert>


</mapper>