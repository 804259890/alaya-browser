plugins {
    id 'org.springframework.boot' version "$springbootVersion"
    id 'org.hidetake.ssh' version '2.10.1'
}
apply plugin: 'io.spring.dependency-management'
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

dependencies {
    compile project(":browser-service")
    runtimeOnly 'org.springframework.boot:spring-boot-devtools'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    compile "com.google.guava:guava:$guavaVersion"
    compile group: 'com.lmax', name: 'disruptor', version: '3.4.2'
    compile group: 'org.aspectj', name: 'aspectjweaver', version: '1.9.4'
    testCompile group: 'org.hsqldb', name: 'hsqldb', version: '2.5.0'
}

sonarqube {
    properties {
        property "sonar.exclusions", "src/main/java/**/dao/param**,**/*Mapper.java," +
                "**/*Application.java,**/NodeUpdateTask.java,**/NetworkStatUpdateTask.java," +
                "**/ProposalInfoTask.java,**/AddressUpdateTask.java,**/EpochMessage.java," +
                "**/NetworkStatCache.java,**/ShutdownCallback.java,**/AccountService.java," +
                "**/OnSettleConverter.java,**/PersistenceEvent.java,**/AddressTypeEnum.java," +
                "**/ConfigChange.java,**/TxAnalyseResult.java,**/DelegateExitResult.java," +
                "**/CalculateUtils.java,**/PersistenceEventHandler.java,**/DelegateRewardClaimConverter.java," +
                "**/EsDelegateRewardService.java,**/ERC20Client.java,**/TransferEventConverter.java,"+
                "**/StakingDelegateBalanceAdjustmentServiceTest2.java"

    }
}

test {
    //   include '**/Test*.class'
    // 忽略指定的测试用例
    exclude '/**/ProposalContractTest.class'
    exclude '/**/RestrictingPlanContractTest.class'
    exclude '/**/SlashContractTest.class'
    exclude '/**/TransactionSender.class'
    exclude '/**/CustomNodeMapperTest.class'
    exclude '/**/StakingContractTest.class'
    exclude '/**/WASMUploadTest.class'
    exclude '/**/WASMDestructTest.class'
    exclude '/**/SuicideAndSelfdestructTest.class'
    exclude '/**/HumanStandardTokenTest.class'
    exclude '/**/proxyppos/*Test.class'
    exclude '/**/proxyppos/**/*Test.class'
    exclude '/**/StakingDelegateBalanceAdjustmentServiceTest2.class'
}

remotes {
    webServer {
        host = "$deployServerHost"
        user = "$deployServerUser"
        port = Integer.parseInt("$deployServerPort")
        password = "$deployServerPassword"
    }
}

// 包名
def packageName = "${project.name}-${version}"
def deployDir = "$deployRootDir/debug"

task deployToTestEnv(dependsOn:[
    'buildTar'
],group: 'deploy') {
    doLast {
        ssh.run {
            session(remotes.webServer) {
                execute "rm -rf $deployDir/$packageName* && mkdir -p $deployDir"
                put from: "$buildDir/distributions/${packageName}.tar.gz", into: "$deployDir"
                def result = execute "cd $deployDir && tar -xvf ${packageName}.tar.gz"
                println(result)
            }
        }
    }
}