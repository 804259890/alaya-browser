plugins {
	id 'org.springframework.boot' version "$springbootVersion"
    id 'org.hidetake.ssh' version '2.10.1'
}
apply plugin: 'io.spring.dependency-management'
configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

dependencies {
	compile project(":browser-service")
	runtimeOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-websocket'
	compile 'io.projectreactor.netty:reactor-netty:0.8.10.RELEASE'
}

// 拷贝接口文档至类路径
task copyDocsToClasspath(type: Copy) {
    file('build/resources/main/public').mkdirs()
    from "${project.parent.projectDir}/docs"
    into 'build/resources/main/public'
}
task copyDocsToDistribute(type: Copy) {
    file('build/package/public').mkdirs()
    from "${project.parent.projectDir}/docs"
    into 'build/package/public'
}

// 拷贝网站配置文件至类路径
task copyWebsiteConfToClasspath(type: Copy){
    file('build/resources/main/public').mkdirs()
    from "webconfig"
    into 'build/resources/main/public'
}
task copyWebsiteConfToDistribute(type: Copy){
    file('build/package/public').mkdirs()
    from "webconfig"
    into 'build/package/public'
}

//sonar扫描的路径
sonarqube {
    properties {
        property "sonar.sources", "src/main/java"
        property "sonar.exclusions", "**/*Application.java," +
                "src/main/java/**/utils/**," +
                "src/main/java/**/serializer/**," +
                "src/main/java/**/config/**," +
                "src/main/java/**/task/**," +
                "src/main/java/**/response/token/**," +
                "src/main/java/**/exception/**," +
                "**/WebSocketController.java,**/BrowserCache.java," +
                "**/JedisNoResultCall.java,**/CommonMethod.java," +
                "**/NullStringJsonSerializer.java,**/NullArrayJsonSerializer.java," +
                "**/RecaptchaDto.java,**/RewardJob.java,"
                "**/PageHelper.java"

    }
}
